#####################################
# IBR-DTN daemon                    #
#####################################

#
# the local eid of the dtn node
# default is the hostname
#
local_uri = dtn://%hostname%

#
# specifies an additional logfile
#
logfile = /var/log/ibrdtn.log

#
# timezone offset in hours
#
#timezone = +1

#
# Limit the block size of all bundles
# The value accepts different multipliers.
# G = 1,000,000,000 bytes
# M = 1,000,000 bytes
# K = 1,000 bytes
#
#limit_blocksize = 1.3G

#
# Limit the offset of predated timestamps to a max value.
# Bundles with an invalid timestamp will be rejected.
#
#limit_predated_timestamp = 604800

#
# Limit the max. lifetime of a bundle-
# Bundles with a lifetime greater than this value will be rejected.
#
#limit_lifetime = 604800

# set the user and group for the daemon
#user = nobody
#uid = 1
#gid = 1

# bind API to a named socket instead of an interface
#api_socket = /tmp/ibrdtn.sock

# define the interface for the API, choose any to bind on all interfaces
#api_interface = any

# define the port for the API to bind on
#api_port = 4550

#####################################
# storage configuration             #
#####################################

#
# define a folder for temporary storage of bundles
# if this is not defined bundles will processed in memory
#
#blob_path = /tmp

#
# define a folder for persistent storage of bundles
# if this is not defined bundles will stored in memory only
#
#storage_path = /var/spool/ibrdtn/bundles

#
# defines the storage module to use
# default is "simple" using memory or disk (depending on storage_path)
# storage strategy. if compiled with sqlite support, you could change
# this to sqlite to use a sql database for bundles.
#
#storage = default

#
# Limit the size of the storage.
# The value accepts different multipliers.
# G = 1,000,000,000 bytes
# M = 1,000,000 bytes
# K = 1,000 bytes
#
#limit_storage = 20M


#####################################
# statistic logging                 #
#####################################

#
# types: stdout | syslog | plain | csv | stat | udp
#
# statistic_type = stat
# statistic_interval = 2
# statistic_file = /tmp/ibrdtn.stats
# statistic_address = 127.0.0.1
# statistic_port = 1234


#####################################
# convergence layer configuration   #
#####################################

#
# discovery over UDP/IP
#
# You can specify an address to listen to for discovery announcements.
# Multicast addresses are supported. If no address is specified the default
# broadcast address is used.
#
#discovery_address = ff02::142  224.0.0.142
discovery_address = 224.0.0.1

# Specify the timeout. If no further discovery announcement is received
# for x seconds, the daemon assume that the node has went away.
#discovery_timeout = 5

# use short IPND beacons
#discovery_short = 0

# specify the discovery mechanism to use
# 0 = DTN2 compatible discovery
# 1 = IPND version 0
# 2 = IPND version 1 (default)
#discovery_version = 2
discovery_crosslayer = yes

# To disable discovery announcements, set this option to zero.
# (default is 1)
#
discovery_announce = 1

#
# a list (seperated by spaces) of names for convergence layer instances.
# lan0 lan1 lan2
net_interfaces = %convergence_interfaces%

#
# dynamic rebind to network interfaces
# If this feature is enabled, then a socket will be rebound on the
# network interface if the address has changed or the interface is
# temporarily down.
#
#net_rebind = yes

#
# Try to connect to other nodes each x seconds.
# This option keeps connections up all the time.
#
#net_autoconnect = 60

#
# configuration for a convergence layer named lan0
#
%convergence_layer%
#net_lan0_type = tcp					# we want to use TCP as protocol
#net_lan0_interface = eth0			# listen on interface eth0 
#net_lan0_port = 4556				# with port 4556 (default)
#net_lan0_discovery = yes			# enable discovery (default)

#
# configuration for a convergence layer named lan1
#
#net_lan1_type = udp				# we want to use UDP as protocol
#net_lan1_interface = eth0			# listen on interface eth0 
#net_lan1_port = 4556				# with port 4556 (default)
#net_lan1_discovery = no			# disable discovery

#
# TCP tuning options
#
# NODELAY option in TCP disables the nagle algorithm, if set to yes (default). 
#tcp_nodelay = yes
#
# The bundles are split into chunks while they are transmitted over TCP. This
# parameter defines the size of these chunks (4096 is the default).
#tcp_chunksize = 4096
#
# The timeout for idle TCP connection in seconds. 0 = disabled
#tcp_idle_timeout = 0


#####################################
# routing configuration             #
#####################################

#
# routing strategy
#
# values: default | epidemic | flooding
#
# In the "default" the daemon only delivers bundles to neighbors and static
# available nodes. The alternative module "epidemic" spread all bundles to
# all available neighbors. Flooding works like epidemic, but do not send the
# own summary vector to neighbors.
#
routing = flooding

#
# forward bundles to other nodes (yes/no)
#
routing_forwarding = yes

#
# static routing rules
# - a rule is a regex pattern
# - format is <target-scheme> <routing-node>
#
# route all bundles for "dtn://*.moon.dtn/*" to dtn://router.dtn
#route1 = ^dtn://[[:alpha:]].moon.dtn/[[:alpha:]] dtn://router.dtn	

#
# static connections
# for configure static connections it is important to begin with "static1_"
# and count up ("static2_", "static3_", ...)
#

### node-five.dtn ###
#static1_address = 10.0.0.5			# the node has the address 10.0.0.5
#static1_port = 4556				# accept bundles on port 4556
#static1_uri = dtn://node-five.dtn	# eid of the node is "dtn://node-five.dtn"
#static1_proto = tcp				# reachable over TCP
#static1_immediately = yes			# connect immediately to this node

### node-ten.dtn ###
#static2_address = 192.168.0.10		# the node has the address 10.0.0.10
#static2_port = 4556				# accept bundles on port 4556
#static2_uri = dtn://node-ten.dtn	# eid of the node is "dtn://node-ten.dtn"
#static2_proto = udp				# reachable over UDP
#static1_immediately = no			# connect on-demand to this node


#####################################
# bundle security protocol          #
#####################################

#
# the level specifies the security constains
#
# 0 = no constrains (default)
# 1 = accept only BAB authenticated bundles
# 2 = accept only encrypted bundles
# 3 = accept only BAB authenticated and encrypted bundles
#security_level = 0

#
# bab default key
#
#security_bab_default_key = /etc/ibrdtn/bpsec/default-bab-key.mac

#
# key path
#
#security_path = /etc/ibrdtn/bpsec/keys

#
# TLS for TCP convergence layer
# Authentication and encryption (optional) support for every
# tcp connection between the daemons.
#
# certificate of the authority
#security_ca = /etc/ibrdtn/tls/ca.crt

# local TLS key
#security_key = /etc/ibrdtn/tls/local.key

# path to trusted certificates
#security_trusted_ca_path = /etc/ibrdtn/tls/

# set to 'yes' if tcp connections without TLS are not allowed
#security_tls_required = yes

# set to 'yes' to disable encryption in the TLS streams
#security_tls_disable_encryption = yes


#####################################
# time synchronization              #
#####################################

#
# set to yes if this node is connected to a high precision time reference
# like GPS, DCF77, NTP, etc.
#
#time_reference = yes

#
# set the quality of time decrease tick
#
#time_qot_tick = 0

#
# request time synchronization on discovery
#
#time_sync_on_discovery = yes

#
# announce time sync capabilities in discovery messages
#
#time_discovery_announcements = yes

#
# Parameters for the QoT aging process.
#
#time_sigma = 1.001
#time_sync_level = 0.15

#
# Adjust the clock of the host on each sync 
#
#time_set_clock = no
